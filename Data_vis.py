import pandas as pd
from os import chdir
from matplotlib import pyplot as plt 
import seaborn as sns
import streamlit as st
import numpy as np


st.set_page_config(layout='wide')

# Now, read the names of the semi-categorical attributes from the respective text file.
with open('Semi-categorical columns.txt', 'r') as file:
    columns = file.readlines()
    columns = [value.rstrip() for value in columns]
columns.sort()

# Read the seaborn palette values as well.
with open('palette_values.txt', 'r') as file:
    palette_values = file.readlines()
    palette_values = [palette_name.rstrip() for palette_name in palette_values]

# The sidebar portion. Contains options to adjust the size of the figure.
fig_width = st.sidebar.slider(
    'Width of the figure',
    min_value=8.0, max_value=20.0, step=0.5, value=15.0
)
fig_height = st.sidebar.slider(
    'Height of the figure',
    min_value=5.0, max_value=10.0, step=0.5
)

title = st.title('Malware data visualisation')
st.markdown("""
    Use this page to visualise the semi-categorical&copy; variables of the malware dataset.
""")

source_file = st.file_uploader(
    'Upload the Malware CSV file. Default included.'
)
if source_file is None:
    df = pd.read_csv('MALWARE_FINAL.csv')
    st.write("Opened the default file!")
else:
    df = pd.read_csv(source_file)
    st.write('Read the custom file!')

selected_x = st.selectbox(
    'What do you want the x variable to be?',
    columns
)

st.write(df.head())
log_scale = st.selectbox(
    'Would you like to use a log scale?',
    ['Yes', 'No']
)

st.markdown("""
    #### A log scale is highly recommended in ALL the columns so that less-occurring data are visible.
""")

fig, ax = plt.subplots(figsize=(fig_width, fig_height))
sns.set(font_scale=1)
ax = sns.countplot(
    data=df,
    x=selected_x,
    hue='Malware',
    palette=np.random.choice(palette_values)
)
if log_scale == 'Yes':
    ax.set_yscale("symlog")
else:
    ax.set_yscale('linear')
plt.grid()
plt.title(f'Distribution of {selected_x} VS Malware')
plt.tight_layout()
st.pyplot(fig)
st.pyplot(fig)
